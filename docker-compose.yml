version: "3.9"

services:
  redis:
    image: redis:7-alpine
    command: [
      "redis-server",
      "--save", "",
      "--appendonly", "no",
      "--maxmemory", "128mb",
      "--maxmemory-policy", "allkeys-lru",
      "--hz", "50",                # Hz mais alto -> redis mais responsivo
      "--tcp-keepalive", "30"
    ]
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "100MB"
    networks:
      - rinha-net

  api1:
    image: jmz25/rinhattus-api:latest
    container_name: api1
    depends_on:
      - redis
    environment:
      - JAVA_OPTS=-Xms64m -Xmx120m -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -XX:+UseStringDeduplication -server
      - SPRING_DATA_REDIS_HOST=redis
      - SERVER_PORT=8080
    expose:
      - "8080"
    deploy:
      resources:
        limits:
          cpus: "0.45"
          memory: "130MB"
    networks:
      - rinha-net

  api2:
    image: jmz25/rinhattus-api:latest
    container_name: api2
    depends_on:
      - redis
    environment:
      - JAVA_OPTS=-Xms64m -Xmx120m -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -XX:+UseStringDeduplication -server
      - SPRING_DATA_REDIS_HOST=redis
      - SERVER_PORT=8080
    expose:
      - "8080"
    deploy:
      resources:
        limits:
          cpus: "0.45"
          memory: "130MB"
    networks:
      - rinha-net

  nginx:
    image: nginx:1.27-alpine
    container_name: nginx
    ports:
      - "9999:80" # exposto para o loadtest
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "30MB"
    networks:
      - rinha-net

networks:
  rinha-net:
    driver: bridge
